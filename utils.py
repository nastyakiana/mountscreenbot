import yfinance as yf
import matplotlib.pyplot as plt
import io
import base64
import numpy as np

def analyze_ticker(ticker):
    try:
        stock = yf.Ticker(ticker)
        hist = stock.history(period="1mo")

        if hist.empty:
            return f"‚ö†Ô∏è No data available for {ticker}"

        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        market_cap = stock.info.get("marketCap", 0)
        price = stock.info.get("currentPrice", 0)
        avg_volume = stock.info.get("averageVolume", 0)
        insider_pct = stock.info.get("heldPercentInsiders", 0)
        institutional_pct = stock.info.get("heldPercentInstitutions", 0)

        # –¢—Ä–µ–Ω–¥
        first_close = hist["Close"].iloc[0]
        last_close = hist["Close"].iloc[-1]
        trend_pct = ((last_close - first_close) / first_close) * 100

        # –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å
        est_daily_value = avg_volume * price
        liquidity = "Illiquid" if est_daily_value < 100000 else "Liquid"

        # Wash trading (—Å–ø–∞–π–∫–∏)
        volumes = hist["Volume"]
        median_vol = np.median(volumes)
        spikes = sum(volumes > 3 * median_vol)

        # –ì—Ä–∞—Ñ–∏–∫
        plt.figure(figsize=(6,3))
        plt.bar(hist.index, hist["Volume"], color="skyblue")
        plt.title(f"{ticker} ‚Äî Volume (1mo)")
        plt.ylabel("Shares")
        plt.xticks(rotation=45)
        plt.tight_layout()

        buf = io.BytesIO()
        plt.savefig(buf, format="png")
        buf.seek(0)
        image_base64 = base64.b64encode(buf.read()).decode("utf-8")
        buf.close()

        # –ò—Ç–æ–≥
        result = f"""
üìä *{ticker} Analysis*
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üí∞ *Market Cap:* ${market_cap / 1e6:.2f}M  
üíµ *Price:* ${price}  
üìà *Avg Volume:* {int(avg_volume):,}  
üí∏ *Est. Daily Volume:* ${est_daily_value:,.2f}  

üë• *Ownership:*  
‚Ä¢ Insider: {insider_pct:.2%}  
‚Ä¢ Institutional: {institutional_pct:.2%}  
{'üü¢ Balanced ownership' if insider_pct > 0 and institutional_pct > 0 else '‚ö†Ô∏è Weak institutional interest'}

üìâ *1mo Trend:* {'üî∫' if trend_pct > 0 else 'üîª'} {trend_pct:.2f}%  
üíß *Liquidity:* {'‚ùå Illiquid' if liquidity == 'Illiquid' else '‚úÖ Liquid'}  
üßº *Wash Trading:* ‚ö†Ô∏è {spikes} spikes detected over 3√ó median volume

‚úÖ *Verdict:* {'‚ö†Ô∏è Too illiquid or low-quality' if liquidity == 'Illiquid' else '‚úÖ Reasonable trading quality'}

üîó [Yahoo Finance for {ticker}](https://finance.yahoo.com/quote/{ticker})
"""

        return result

    except Exception as e:
        return f"‚ùå Error analyzing {ticker}: {e}"
